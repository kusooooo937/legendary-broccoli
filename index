<!doctype html>
<html lang="ja">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>学校で人気になりたいページ 🌟</title>
<style>
  :root{
    --bg:#0b1220; --panel:#0f1724; --accent:#ffb86b; --muted:#9aa7bf;
    --glass: rgba(255,255,255,0.03);
  }
  *{box-sizing:border-box;font-family:Inter, system-ui, -apple-system, "Hiragino Kaku Gothic ProN", "Noto Sans JP", "Segoe UI", Roboto, "Helvetica Neue", Arial;}
  html,body{height:100%;margin:0;background:
    radial-gradient(1200px 600px at 10% 10%, rgba(255,184,107,0.06), transparent 10%),
    radial-gradient(1000px 500px at 90% 90%, rgba(102,204,255,0.03), transparent 10%), var(--bg);
    color:#eaf2ff;}
  .wrap{max-width:920px;margin:24px auto;padding:20px;}
  header{display:flex;gap:12px;align-items:center}
  .avatar{
    width:88px;height:88px;border-radius:18px;background:linear-gradient(135deg,var(--accent),#ff7ab6);
    display:flex;align-items:center;justify-content:center;font-weight:700;color:#0b1220;font-size:28px;box-shadow:0 6px 18px rgba(0,0,0,0.6);
  }
  h1{margin:0;font-size:20px}
  p.lead{margin:6px 0 0;color:var(--muted)}
  main{display:grid;grid-template-columns:1fr 360px;gap:16px;margin-top:18px}
  .card{background:linear-gradient(180deg,var(--panel),rgba(255,255,255,0.02));padding:14px;border-radius:12px;backdrop-filter:blur(4px);box-shadow:0 6px 22px rgba(2,6,23,0.6)}
  .big{font-size:18px;margin:6px 0 12px}
  .btn{display:inline-block;padding:8px 12px;border-radius:10px;background:linear-gradient(90deg,var(--accent),#ff7ab6);color:#07101b;font-weight:700;text-decoration:none;cursor:pointer;border:none}
  .muted{color:var(--muted);font-size:13px}
  /* Poll */
  .choices{display:flex;flex-direction:column;gap:8px}
  .choice{display:flex;justify-content:space-between;align-items:center;padding:8px;border-radius:10px;background:var(--glass)}
  .choice button{background:transparent;border:1px solid rgba(255,255,255,0.06);padding:6px 8px;border-radius:8px;color:var(--muted);cursor:pointer}
  .bar{height:10px;background:rgba(255,255,255,0.06);border-radius:8px;overflow:hidden;margin-top:6px}
  .bar > i{display:block;height:100%;background:linear-gradient(90deg,var(--accent),#ff7ab6)}
  /* Compliment */
  .compliment{font-weight:700;font-size:16px;padding:12px;border-radius:10px;background:linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));}
  /* Reactions */
  .reactions{display:flex;gap:8px}
  .react{padding:8px;border-radius:10px;background:var(--glass);cursor:pointer;font-weight:700}
  /* Guestbook */
  textarea{width:100%;min-height:68px;padding:10px;border-radius:10px;background:transparent;border:1px solid rgba(255,255,255,0.04);color:inherit}
  .entry{padding:8px;border-radius:8px;background:rgba(255,255,255,0.02);margin-bottom:8px}
  footer{margin-top:18px;color:var(--muted);font-size:13px;text-align:center}
  @media (max-width:920px){main{grid-template-columns:1fr;}}
</style>
</head>
<body>
<div class="wrap">
  <header>
    <div class="avatar" id="avatar">いか</div>
    <div>
      <h1 id="displayName">いかしー — クラスの人気者を目指す</h1>
      <p class="lead">楽しく・安心・ウケるコンテンツで注目を集めよう！スマホで見せると効果大。</p>
    </div>
  </header>

  <main>
    <section>
      <div class="card">
        <div class="big">📣 今すぐ使えるウケ狙いコンテンツ</div>

        <div style="display:grid;gap:12px">
          <!-- Poll -->
          <div>
            <div style="display:flex;justify-content:space-between;align-items:center">
              <strong>🔥 今日のウケるネタは？（投票してね）</strong>
              <button class="btn" id="resetPoll" title="投票をリセット">リセット</button>
            </div>
            <div class="choices" id="pollChoices" style="margin-top:10px">
              <!-- choices populated by JS -->
            </div>
          </div>

          <!-- Compliment generator -->
          <div>
            <div style="display:flex;justify-content:space-between;align-items:center">
              <strong>✨ 褒めことばジェネレータ</strong>
              <button class="btn" id="newCompliment">褒めて！</button>
            </div>
            <div class="compliment" id="complimentText" style="margin-top:10px">「いつも魅力的だね！」</div>
            <div class="muted" style="margin-top:8px">使いどころ：カードに書いて渡す、チャットで送る、朝の挨拶に。</div>
          </div>

          <!-- Guestbook -->
          <div>
            <strong>📝 伝言・ゲストブック</strong>
            <div class="muted" style="margin-bottom:8px">匿名でもOK（このページのローカル保存）</div>
            <textarea id="guestText" placeholder="ここに一言！"></textarea>
            <div style="display:flex;gap:8px;margin-top:8px">
              <button class="btn" id="postGuest">投稿</button>
              <button class="btn" id="clearGuest" style="background:transparent;color:var(--muted);border:1px solid rgba(255,255,255,0.04)">全部消す</button>
            </div>
            <div id="guestList" style="margin-top:12px"></div>
          </div>
        </div>
      </div>

      <!-- Reactions / Quick share -->
      <div class="card" style="margin-top:12px">
        <div style="display:flex;justify-content:space-between;align-items:center">
          <strong>💬 リアクションでウケを測る</strong>
          <div class="muted">スマホでタップ！</div>
        </div>
        <div style="margin-top:10px" class="reactions">
          <div class="react" data-r="🔥">🔥 <span id="r-fire">0</span></div>
          <div class="react" data-r="😂">😂 <span id="r-lol">0</span></div>
          <div class="react" data-r="👍">👍 <span id="r-like">0</span></div>
          <div class="react" data-r="🎉">🎉 <span id="r-party">0</span></div>
        </div>
        <div style="margin-top:12px;display:flex;gap:8px;flex-wrap:wrap">
          <button class="btn" id="shareBtn">シェアする</button>
          <button class="btn" id="copyBtn" style="background:transparent;color:var(--muted);border:1px solid rgba(255,255,255,0.04)">内容をコピー</button>
        </div>
      </div>

    </section>

    <aside>
      <div class="card">
        <strong>プロフィールを編集</strong>
        <div style="margin-top:8px">
          <input id="nameInput" placeholder="名前を入力（例：いかしー）" style="width:100%;padding:8px;border-radius:8px;background:transparent;border:1px solid rgba(255,255,255,0.04);color:inherit" />
          <div style="display:flex;gap:8px;margin-top:8px">
            <input id="initials" maxlength="2" placeholder="イニシャル" style="width:64px;padding:8px;border-radius:8px;background:transparent;border:1px solid rgba(255,255,255,0.04);color:inherit" />
            <button class="btn" id="saveProfile">保存</button>
          </div>
        </div>
        <hr style="border:none;border-top:1px solid rgba(255,255,255,0.03);margin:12px 0">
        <div>
          <strong>投票結果サマリ</strong>
          <div id="pollSummary" style="margin-top:8px" class="muted"></div>
        </div>
      </div>

      <div class="card" style="margin-top:12px">
        <strong>ヒント：学校でウケるコツ</strong>
        <ul class="muted" style="padding-left:18px;margin-top:8px">
          <li>自然体でやさしい—押しつけは逆効果</li>
          <li>ネタは短く、スマホで見せられる形に</li>
          <li>他人を傷つけないジョークを選ぶ</li>
        </ul>
      </div>
    </aside>
  </main>

  <footer>
    このページはローカル保存（ブラウザのストレージ）です。必要なら公開方法やSNS連携を手伝うよ。  
  </footer>
</div>

<script>
/* ---- 初期データ ---- */
const choices = [
  {id:'meme', label:'面白ミーム（ショート）', votes:0},
  {id:'trick', label:'一発芸（短い）', votes:0},
  {id:'photo', label:'クールな写真・自撮り', votes:0},
  {id:'quiz', label:'クイズ・謎解き', votes:0}
];

const compliments = [
  "今日の君、なんか輝いてるよ！",
  "一緒にいると楽しくなる人だね",
  "その笑顔、周りまで明るくする！",
  "気配りができてかっこいいね",
  "発想が独特で面白い！",
  "頼りになる雰囲気があるよ"
];

/* ---- storage helpers ---- */
function save(key, obj){localStorage.setItem(key, JSON.stringify(obj))}
function load(key, fallback){try{const v=localStorage.getItem(key); return v?JSON.parse(v):fallback}catch(e){return fallback}}

/* ---- Poll UI ---- */
function renderPoll(){
  const container = document.getElementById('pollChoices');
  container.innerHTML = '';
  const poll = load('school_poll', choices);
  // ensure we have keys
  poll.forEach(c=>{
    const div = document.createElement('div');
    div.className = 'choice';
    div.innerHTML = `<div style="flex:1">${c.label}</div>
      <div style="display:flex;align-items:center;gap:8px">
        <div class="muted" style="min-width:46px;text-align:right">${c.votes}</div>
        <button data-id="${c.id}">投票</button>
      </div>`;
    container.appendChild(div);
    div.querySelector('button').onclick = ()=>{vote(c.id)}
    const bar = document.createElement('div');
    bar.className='bar';
    const percent = document.createElement('i');
    const total = poll.reduce((s,i)=>s+i.votes,0) || 1;
    percent.style.width = Math.round((c.votes/total)*100) + '%';
    bar.appendChild(percent);
    container.appendChild(bar);
  });
  renderSummary();
}

function vote(id){
  const poll = load('school_poll', choices);
  const item = poll.find(p=>p.id===id);
  if(item) item.votes++;
  save('school_poll', poll);
  renderPoll();
}

/* reset */
document.getElementById('resetPoll').onclick = ()=>{
  if(confirm('投票をリセットしますか？')){
    save('school_poll', choices);
    renderPoll();
  }
}

/* ---- Poll summary ---- */
function renderSummary(){
  const poll = load('school_poll', choices);
  const total = poll.reduce((s,i)=>s+i.votes,0);
  const el = document.getElementById('pollSummary');
  if(total===0) el.textContent = 'まだ投票がありません。';
  else {
    el.innerHTML = poll.map(p=>`${p.label}: ${p.votes}票`).join('<br>');
  }
}

/* ---- Compliment generator ---- */
document.getElementById('newCompliment').onclick = ()=>{
  const i = Math.floor(Math.random()*compliments.length);
  document.getElementById('complimentText').textContent = '「' + compliments[i] + '」';
}

/* ---- Guestbook ---- */
function renderGuests(){
  const list = load('school_guests', []);
  const el = document.getElementById('guestList');
  el.innerHTML = '';
  list.slice().reverse().forEach(item=>{
    const div = document.createElement('div');
    div.className='entry';
    div.innerHTML = `<div style="font-weight:700">${item.name || '匿名' } <span class="muted" style="font-weight:400">- ${new Date(item.t).toLocaleString()}</span></div>
      <div style="margin-top:6px">${escapeHtml(item.text)}</div>`;
    el.appendChild(div);
  });
}

document.getElementById('postGuest').onclick = ()=>{
  const txt = document.getElementById('guestText').value.trim();
  if(!txt){alert('一言入れてね！'); return;}
  const list = load('school_guests', []);
  list.push({name: (document.getElementById('nameInput').value || '匿名'), text: txt, t: Date.now()});
  save('school_guests', list);
  document.getElementById('guestText').value='';
  renderGuests();
}
document.getElementById('clearGuest').onclick = ()=>{
  if(confirm('ゲストブックを全部消す？')){ save('school_guests', []); renderGuests(); }
}

/* ---- Reactions ---- */
const reacts = ['r-fire','r-lol','r-like','r-party'];
function loadReacts(){ return load('school_reacts', {fire:0,lol:0,like:0,party:0}) }
function saveReacts(obj){ save('school_reacts', obj); updateReactUI(); }
function updateReactUI(){
  const v = loadReacts();
  document.getElementById('r-fire').textContent = v.fire;
  document.getElementById('r-lol').textContent = v.lol;
  document.getElementById('r-like').textContent = v.like;
  document.getElementById('r-party').textContent = v.party;
}
document.querySelectorAll('.react').forEach(el=>{
  el.onclick = ()=>{
    const key = el.dataset.r;
    const v = loadReacts();
    if(key==='🔥') v.fire++;
    else if(key==='😂') v.lol++;
    else if(key==='👍') v.like++;
    else if(key==='🎉') v.party++;
    saveReacts(v);
    // small visual feedback
    el.animate([{transform:'scale(1)'},{transform:'scale(1.12)'},{transform:'scale(1)'}],{duration:180});
  }
});

/* ---- Profile save ---- */
document.getElementById('saveProfile').onclick = ()=>{
  const name = document.getElementById('nameInput').value.trim() || 'いかしー';
  const initials = document.getElementById('initials').value.trim().slice(0,2) || name.slice(0,2);
  save('school_profile', {name,initials});
  applyProfile();
}
function applyProfile(){
  const p = load('school_profile', {name:'いかしー',initials:'いか'});
  document.getElementById('displayName').textContent = `${p.name} — クラスの人気者を目指す`;
  document.getElementById('avatar').textContent = p.initials;
  document.getElementById('nameInput').value = p.name;
  document.getElementById('initials').value = p.initials;
}

/* ---- Share / copy ---- */
document.getElementById('shareBtn').onclick = async ()=>{
  const text = `${document.getElementById('displayName').textContent}\nおすすめネタを投票してね！`;
  if(navigator.share){ try{ await navigator.share({title:'注目ページ',text}); } catch(e){} }
  else { alert('この端末では共有機能が使えません。コピーで共有してね。'); navigator.clipboard.writeText(text).then(()=>alert('内容をコピーしました'))}
}
document.getElementById('copyBtn').onclick = ()=>{
  const summary = `${document.getElementById('displayName').textContent}\n${document.getElementById('pollSummary').innerText}\n${document.getElementById('complimentText').innerText}`;
  navigator.clipboard.writeText(summary).then(()=>{ alert('内容をコピーしました！') });
}

/* ---- helpers ---- */
function escapeHtml(s){ return s.replaceAll('&','&amp;').replaceAll('<','&lt;').replaceAll('>','&gt;').replaceAll('"','&quot;') }

/* ---- init ---- */
(function init(){
  // ensure poll exists in storage
  if(!localStorage.getItem('school_poll')) save('school_poll', choices);
  if(!localStorage.getItem('school_reacts')) save('school_reacts', {fire:0,lol:0,like:0,party:0});
  renderPoll();
  renderGuests();
  updateReactUI();
  applyProfile();
})();
</script>
</body>
</html>
